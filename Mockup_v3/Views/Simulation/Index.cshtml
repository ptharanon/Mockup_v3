
@{
    ViewBag.Title = "Simulation";
}

<section class="header" style="margin-bottom:40px"></section>
    <!-- Input -->
    <div class="inputs col-md-6" style="text-align:center">
        <h2 style="text-align:center">Input</h2><br />
        <div id="inputForm" style="text-align:center">
            @Html.Partial("MotorSelection")
            @Html.Partial("Input", new ViewDataDictionary { { "title", "Reference Speed" }, { "id", "inputSpeed" }, { "plotid", "refSpeedGraph" } });
            @Html.Partial("Input", new ViewDataDictionary { { "title", "Load Torque" }, { "id", "inputTorque" }, { "plotid", "loadTorqueGraph" } })
            <!-- Simulate button -->
            <div style="margin:20px">
                <button id="simulate-btn" type="submit" class="btn btn-primary btn-lg">SIMULATE!</button>
            </div>
            <hr />
        </div>
    </div>
    <!-- Output -->
    <div class="outputs col-md-6" style="text-align:center">
        @Html.Partial("Output")
        <!-- Export button -->
        <div style="margin:20px">
            <input type="button" class="btn btn-primary btn-lg" value="EXPORT TO CSV" onclick="location.href='@Url.Action("ExportDataToCsv", "Simulation")'" />
        </div>
    </div>

<script>
    $(document).ready(function () {
        $('#simulate-btn').click(function (e) {
            e.preventDefault();
            document.getElementById('simulate-btn').textContent = "Loading...";
            $.ajax({
                url: '@Url.Action("Simulate", "Simulation")',
                data: { motor: "Motor 1" },
                type: "post",
                dataType: 'json',
                success: function (response) {
                    drawPlot("outputCurrent");
                    drawPlot("outputTorque");
                    drawPlot("outputSpeed");
                    drawPlot("outputVoltage");
                    document.getElementById('simulate-btn').textContent = "SIMULATE!";
                }
            })
        });
    });

    $('#exportcsv-btn').click(function (e) {
        e.preventDefault();
    });

    function drawPlot(plotName) {
        $.ajax({
            url: '@Url.Action("GetPlotData", "Simulation")',
            data: { plotname: plotName },
            type: "get",
            success: function (response) {
                if (plotName == "inputSpeed") {
                    refSpeedPlot.series[0].data = response.signal;
                    refSpeedPlot.replot({ resetAxes: true });
                } else if (plotName == "inputTorque") {
                    loadTorquePlot.series[0].data = response.signal;
                    loadTorquePlot.replot({ resetAxes: true });
                } else if (plotName == "outputCurrent") {
                    outputSCPlot.series[0].data = response.signal;
                    outputSCPlot.replot({ resetAxes: true });
                } else if (plotName == "outputTorque") {
                    outputTorquePlot.series[0].data = response.signal;
                    outputTorquePlot.replot({ resetAxes: true });
                } else if (plotName == "outputSpeed") {
                    outputSpeedPlot.series[0].data = response.signal;
                    outputSpeedPlot.replot({ resetAxes: true });
                } else if (plotName == "outputVoltage") {
                    outputDCVPlot.series[0].data = response.signal;
                    outputDCVPlot.replot({ resetAxes: true });
                }
            }
        })
    }
</script>

<script type="text/javascript">
    var refSpeedPlot;
    var loadTorquePlot;

    $(window).load(function () {
        var graph = [[0, 0]];
        refSpeedPlot = jQuery.jqplot('refSpeedGraph', [graph], {
            seriesDefaults: {
                showMarker: false,
                pointLabels: { show: false, edgeTolerance: 5 }
            },
            axes: {
                xaxis: { label: "sec", labelRenderer: $.jqplot.CanvasAxisLabelRenderer },
                yaxis: { label: "rad/s", labelRenderer: $.jqplot.CanvasAxisLabelRenderer }
            },
            cursor: {
                show: true
            }
        });
        loadTorquePlot = jQuery.jqplot('loadTorqueGraph', [graph], {
            seriesDefaults: {
                showMarker: false,
                pointLabels: { show: false, edgeTolerance: 5 }
            },
            axes: {
                xaxis: { label: "sec", labelRenderer: $.jqplot.CanvasAxisLabelRenderer },
                yaxis: { label: "rad/s", labelRenderer: $.jqplot.CanvasAxisLabelRenderer }
            },
            cursor: {
                show: true
            }
        });
    });

    $(window).resize(function () {
        refSpeedPlot.replot();
        loadTorquePlot.replot();
    });
</script>